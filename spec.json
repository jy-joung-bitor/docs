{
  "openapi": "3.1.0",
  "info": {
    "title": "Prisma Data Platform Management API",
    "description": "API for managing Prisma Data Platform resources",
    "version": "v0"
  },
  "security": [{ "OAuth2": ["workspace:admin", "offline_access"] }, { "Bearer": [] }],
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "OAuth2 authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://auth.prisma.io/authorize",
            "tokenUrl": "https://auth.prisma.io/token",
            "refreshUrl": "https://auth.prisma.io/token",
            "scopes": {
              "workspace:admin": "Full access to workspace resources",
              "offline_access": "Offline access"
            }
          }
        }
      },
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "OAuth2 token for API authentication"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/workspaces": {
      "get": {
        "responses": {
          "200": {
            "description": "Retrieve information about the workspaces accessible by the current actor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "displayName": { "type": "string" }
                        },
                        "required": ["id", "displayName"]
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          }
        },
        "operationId": "getWorkspaces",
        "tags": ["Workspaces"],
        "parameters": [],
        "description": "Retrieve information about the workspaces accessible by the current actor"
      }
    },
    "/projects": {
      "get": {
        "responses": {
          "200": {
            "description": "Retrieve all projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdAt": { "type": "string", "format": "date-time" },
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "databases": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string" },
                                "name": { "type": "string" },
                                "isDefault": { "type": "boolean" }
                              },
                              "required": ["id", "name", "isDefault"]
                            }
                          }
                        },
                        "required": ["createdAt", "id", "name", "databases"]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextCursor": {
                          "type": ["string", "null"],
                          "description": "Next cursor to continue pagination"
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether there are more items to paginate"
                        }
                      },
                      "required": ["nextCursor", "hasMore"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          }
        },
        "operationId": "getProjects",
        "tags": ["Projects"],
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "schema": { "type": ["string", "null"], "description": "Cursor for pagination" }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "number", "default": 100, "description": "Limit for pagination" }
          }
        ],
        "description": "Retrieve all projects"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "createdAt": { "type": "string", "format": "date-time" },
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "databases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "createdAt": { "type": "string", "format": "date-time" },
                              "id": { "type": "string" },
                              "name": { "type": "string" },
                              "region": { "type": "string" },
                              "isDefault": { "type": "boolean" },
                              "connectionString": { "type": "string" },
                              "status": { "type": "string" },
                              "apiKeys": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "string" },
                                    "name": { "type": "string" },
                                    "createdAt": { "type": "string", "format": "date-time" },
                                    "connectionString": { "type": "string" }
                                  },
                                  "required": ["id", "name", "createdAt", "connectionString"]
                                }
                              }
                            },
                            "required": [
                              "createdAt",
                              "id",
                              "name",
                              "region",
                              "isDefault",
                              "connectionString",
                              "status",
                              "apiKeys"
                            ]
                          }
                        }
                      },
                      "required": ["createdAt", "id", "name", "databases"]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "createdAt": { "type": "string", "format": "date-time" },
                        "id": { "type": "string" },
                        "name": { "type": "string" }
                      },
                      "required": ["createdAt", "id", "name"]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          }
        },
        "operationId": "postProjects",
        "tags": ["Projects"],
        "parameters": [],
        "description": "Create a new project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "region": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-west-1",
                      "eu-west-3",
                      "eu-central-1",
                      "ap-northeast-1",
                      "ap-southeast-1"
                    ],
                    "default": "us-east-1"
                  },
                  "name": { "type": "string" }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "delete": {
        "responses": {
          "204": { "description": "Project deleted" },
          "400": {
            "description": "Project cannot be deleted due to existing dependencies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          },
          "404": {
            "description": "Project with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "operationId": "deleteProjectsById",
        "tags": ["Projects"],
        "parameters": [
          { "in": "path", "name": "id", "schema": { "type": "string" }, "required": true }
        ],
        "description": "Deletes a project"
      },
      "get": {
        "responses": {
          "200": {
            "description": "Project retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdAt": { "type": "string", "format": "date-time" },
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "databases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "isDefault": { "type": "boolean" }
                        },
                        "required": ["id", "name", "isDefault"]
                      }
                    }
                  },
                  "required": ["createdAt", "id", "name", "databases"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          },
          "404": { "description": "Project with the specified ID was not found" }
        },
        "operationId": "getProjectsById",
        "tags": ["Projects"],
        "parameters": [
          { "in": "path", "name": "id", "schema": { "type": "string" }, "required": true }
        ],
        "description": "Retrieve a project"
      }
    },
    "/projects/{id}/transfer": {
      "post": {
        "responses": {
          "200": {
            "description": "Project transferred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdAt": { "type": "string", "format": "date-time" },
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "databases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "isDefault": { "type": "boolean" }
                        },
                        "required": ["id", "name", "isDefault"]
                      }
                    }
                  },
                  "required": ["createdAt", "id", "name", "databases"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          },
          "404": { "description": "Project with the specified ID was not found" }
        },
        "operationId": "postProjectsByIdTransfer",
        "tags": ["Projects"],
        "parameters": [
          { "in": "path", "name": "id", "schema": { "type": "string" }, "required": true }
        ],
        "description": "Transfer a project to a new owner's workspace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "recipientAccessToken": { "type": "string" } },
                "required": ["recipientAccessToken"]
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/databases": {
      "get": {
        "responses": {
          "200": {
            "description": "Databases retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "createdAt": { "type": "string", "format": "date-time" },
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "region": { "type": ["string", "null"] },
                          "isDefault": { "type": "boolean" }
                        },
                        "required": ["createdAt", "id", "name", "region", "isDefault"]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextCursor": {
                          "type": ["string", "null"],
                          "description": "Next cursor to continue pagination"
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether there are more items to paginate"
                        }
                      },
                      "required": ["nextCursor", "hasMore"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          },
          "404": { "description": "Project with the specified ID was not found" }
        },
        "operationId": "getProjectsByProjectIdDatabases",
        "tags": ["Databases"],
        "parameters": [
          { "in": "path", "name": "projectId", "schema": { "type": "string" }, "required": true }
        ],
        "description": "Retrieve all databases for a project"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Database created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdAt": { "type": "string", "format": "date-time" },
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "region": { "type": "string" },
                    "isDefault": { "type": "boolean" },
                    "connectionString": { "type": "string" },
                    "status": { "type": "string" },
                    "apiKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "createdAt": { "type": "string", "format": "date-time" },
                          "connectionString": { "type": "string" }
                        },
                        "required": ["id", "name", "createdAt", "connectionString"]
                      }
                    }
                  },
                  "required": [
                    "createdAt",
                    "id",
                    "name",
                    "region",
                    "isDefault",
                    "connectionString",
                    "status",
                    "apiKeys"
                  ]
                }
              }
            }
          },
          "400": { "description": "Default database already exists" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          },
          "403": { "description": "Project does not belong to the workspace of the Service Token" }
        },
        "operationId": "postProjectsByProjectIdDatabases",
        "tags": ["Databases"],
        "parameters": [
          { "in": "path", "name": "projectId", "schema": { "type": "string" }, "required": true }
        ],
        "description": "Create a new database for a project",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "region": {
                    "type": "string",
                    "enum": [
                      "us-east-1",
                      "us-west-1",
                      "eu-west-3",
                      "eu-central-1",
                      "ap-northeast-1",
                      "ap-southeast-1"
                    ],
                    "default": "us-east-1"
                  },
                  "name": { "type": "string" },
                  "isDefault": { "type": "boolean", "default": false }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/databases/{databaseId}": {
      "get": {
        "responses": {
          "200": {
            "description": "Database retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdAt": { "type": "string", "format": "date-time" },
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "region": { "type": ["string", "null"] },
                    "isDefault": { "type": "boolean" }
                  },
                  "required": ["createdAt", "id", "name", "region", "isDefault"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          },
          "404": { "description": "Database with the specified ID was not found" }
        },
        "operationId": "getProjectsByProjectIdDatabasesByDatabaseId",
        "tags": ["Databases"],
        "parameters": [
          { "in": "path", "name": "databaseId", "schema": { "type": "string" }, "required": true },
          { "schema": { "type": "string" }, "in": "path", "name": "projectId", "required": true }
        ],
        "description": "Retrieve a database"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Database deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "message": { "type": "string" } },
                  "required": ["message"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          },
          "403": { "description": "Cannot delete the default environment" },
          "404": {
            "description": "Database with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "operationId": "deleteProjectsByProjectIdDatabasesByDatabaseId",
        "tags": ["Databases"],
        "parameters": [
          { "in": "path", "name": "databaseId", "schema": { "type": "string" }, "required": true },
          { "schema": { "type": "string" }, "in": "path", "name": "projectId", "required": true }
        ],
        "description": "Delete a database"
      }
    },
    "/projects/{projectId}/databases/{databaseId}/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "Retrieve all database connections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "createdAt": { "type": "string", "format": "date-time" }
                        },
                        "required": ["id", "name", "createdAt"]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "nextCursor": {
                          "type": ["string", "null"],
                          "description": "Next cursor to continue pagination"
                        },
                        "hasMore": {
                          "type": "boolean",
                          "description": "Whether there are more items to paginate"
                        }
                      },
                      "required": ["nextCursor", "hasMore"]
                    }
                  },
                  "required": ["data", "pagination"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "operationId": "getProjectsByProjectIdDatabasesByDatabaseIdConnections",
        "tags": ["Databases Connections"],
        "parameters": [
          { "in": "path", "name": "databaseId", "schema": { "type": "string" }, "required": true },
          {
            "in": "query",
            "name": "cursor",
            "schema": { "type": ["string", "null"], "description": "Cursor for pagination" }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": { "type": "number", "default": 100, "description": "Limit for pagination" }
          },
          { "schema": { "type": "string" }, "in": "path", "name": "projectId", "required": true }
        ],
        "description": "Retrieve all database connections"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Database connection string created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "connectionString": { "type": "string" }
                  },
                  "required": ["id", "name", "createdAt", "connectionString"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "Database with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "connectionString": { "type": "string" }
                  },
                  "required": ["id", "name", "createdAt", "connectionString"]
                }
              }
            }
          }
        },
        "operationId": "postProjectsByProjectIdDatabasesByDatabaseIdConnections",
        "tags": ["Databases Connections"],
        "parameters": [
          { "in": "path", "name": "databaseId", "schema": { "type": "string" }, "required": true },
          { "schema": { "type": "string" }, "in": "path", "name": "projectId", "required": true }
        ],
        "description": "Creates a new database connection string.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "name": { "type": "string" } },
                "required": ["name"]
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/databases/{databaseId}/connections/{id}": {
      "delete": {
        "responses": {
          "204": { "description": "Database connection string deleted" },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "Database with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "operationId": "deleteProjectsByProjectIdDatabasesByDatabaseIdConnectionsById",
        "tags": ["Databases Connections"],
        "parameters": [
          { "in": "path", "name": "id", "schema": { "type": "string" }, "required": true },
          { "schema": { "type": "string" }, "in": "path", "name": "projectId", "required": true },
          { "schema": { "type": "string" }, "in": "path", "name": "databaseId", "required": true }
        ],
        "description": "Deletes a database connection string."
      }
    },
    "/projects/{projectId}/databases/{databaseId}/backups": {
      "get": {
        "responses": {
          "200": {
            "description": "Retrieve database backups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "createdAt": { "type": "string" },
                          "backupType": { "type": "string", "enum": ["full", "incremental"] },
                          "size": { "type": "number" },
                          "status": {
                            "type": "string",
                            "enum": ["running", "completed", "failed", "unknown"]
                          }
                        },
                        "required": ["id", "createdAt", "backupType", "size", "status"]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": { "backupRetentionDays": { "type": "number" } },
                      "required": ["backupRetentionDays"]
                    }
                  },
                  "required": ["data", "meta"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "404": {
            "description": "Database with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "operationId": "getProjectsByProjectIdDatabasesByDatabaseIdBackups",
        "tags": ["Database Backups"],
        "parameters": [
          { "in": "path", "name": "databaseId", "schema": { "type": "string" }, "required": true },
          { "schema": { "type": "string" }, "in": "path", "name": "projectId", "required": true }
        ],
        "description": "Retrieve database backups"
      }
    },
    "/projects/{projectId}/databases/{databaseId}/backups/{backupId}/recoveries": {
      "post": {
        "responses": {
          "202": {
            "description": "Restore initiated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "createdAt": { "type": "string", "format": "date-time" },
                        "id": { "type": "string" },
                        "name": { "type": "string" },
                        "region": { "type": ["string", "null"] },
                        "isDefault": { "type": "boolean" },
                        "status": { "type": "string" }
                      },
                      "required": ["createdAt", "id", "name", "region", "isDefault", "status"]
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["code", "message"]
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "operationId": "postProjectsByProjectIdDatabasesByDatabaseIdBackupsByBackupIdRecoveries",
        "tags": ["Database Backups"],
        "parameters": [
          { "in": "path", "name": "databaseId", "schema": { "type": "string" }, "required": true },
          { "in": "path", "name": "backupId", "schema": { "type": "string" }, "required": true },
          { "schema": { "type": "string" }, "in": "path", "name": "projectId", "required": true }
        ],
        "description": "Restore a backup to a new database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "targetDatabaseName": {
                    "type": "string",
                    "description": "Name of the new database"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/regions": {
      "get": {
        "responses": {
          "200": {
            "description": "Retrieve all available regions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "status": {
                            "type": "string",
                            "enum": ["available", "unavailable", "unsupported"]
                          }
                        },
                        "required": ["id", "name", "status"]
                      }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "const": "unauthorized" },
                    "errorDescription": { "type": "string" }
                  },
                  "required": ["error", "errorDescription"]
                }
              }
            }
          }
        },
        "operationId": "getRegions",
        "tags": ["Misc"],
        "parameters": [],
        "description": "Retrieve all available regions"
      }
    }
  }
}
